%% THIS FUNCTION DECOUPLES THE EQUATIONS OF STATE FOR THE DYNAMIC SYSTEM AND
  % EVALUATES THE DERIVATIVE OF THE STATES FOR EACH TIME STEP.
  
  % THE INPUTS ARE:
    % - THE HANDLE OF A FUNCTION CONTAINING THE STATE EQUATIONS TO BE SOLVED BY
      % THE NUMERICAL INTEGRATOR.
    % - THE TIME SPAN OF THE SIMULATION.
    % - THE INITIAL CONDITIONS OF THE SYSTEM. FOR INERTIAL ELEMENTS, TWO
      % BOUNDARY CONDITIONS MUST BE SPECIFIED: DP(0), P(0). FOR CAPACITANCE
      % ELEMENTS, ONE BOUNDARY CONDITION MUST BE SPECIFIED: Q(0). FOR FLOW
      % SOURCES, ONE BOUNDARY CONDITION MUST BE SPECIFIED: DSf(0).
    
  % THE OUTPUTS ARE:
    % - THE STATE VARIABLES EVALUATED AT EACH TIME STEP.
    % - THE DERIVATIVES OF THE STATE VARIABLES EVALUATED AT EACH TIME STEP.
    % - THE SIMULATION TIMES AT WHICH EACH STATE HAS BEEN EVALUATED.
    % - EXTRA VARIABLES WE SEEK TO ACQUIRE FROM THE SIMULATION EVALUATED AT EACH
      % TIME STEP.

function [X, DX, T, EXT] = STATESINFO(FUNCTIONHANDLE,TSPAN,INITIALS)

global N % DON'T TOUCH THIS LINE!

[T, X] = ode45(FUNCTIONHANDLE,TSPAN,INITIALS); % INITIALIZE THE ODE45 VARIABLE-
  % STEP SOLVER TO DECOUPLE THE STATE EQUATIONS IN EACH DEGREE OF FREEDOM.

DX = zeros(size(X)); % PREALLOCATE A MATRIX FOR THE STATE DERIVATIVES.

EXT = zeros(length(T),N); % PREALLOCATE A VECTOR FOR THE EXTRA OUTPUT VARIABLES.

for I = 1:length(T)
    
    [DX(I,:),EXT(I,:)]=FUNCTIONHANDLE(T(I),X(I,:)); % EVALUATE THE STATE
      % AT EACH TIME STEP TO FIND THE DERIVATIVES OF THE STATES.
end
